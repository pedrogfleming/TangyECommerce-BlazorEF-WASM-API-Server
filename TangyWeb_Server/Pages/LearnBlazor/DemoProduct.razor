@page "/learnBlazor/demoproduct"
<h2 class="text-primary">demoProduct</h2>
<p>Favourites Total: @SelectedFavouriteCount</p>
<p>Last Selected Product: @LastSelectedProductName </p>
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
            <_IndividualProduct Product="@prod" OnFavoriteUpdated="FavouriteCountUpdate"
                OnLastSelectedProductChange = "SelectedProductUpdate">
                <FirstFragment>#1</FirstFragment>
                <SecondFragment>#2</SecondFragment>
        </_IndividualProduct>
        }
    </div>
</div>

@code {
    List<Demo_Product> Products = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    private string LastSelectedProductName { get; set; }
    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                Price = 45.50,
                IsActive = false,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }

                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                Price = 90.75,
                IsActive = false,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }
    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}
